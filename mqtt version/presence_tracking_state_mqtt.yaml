#-------------------------------------------
# Packages / Presence Tracking State
#-------------------------------------------
################################################
## Customization
################################################
homeassistant:
  customize:
    sensor.presence_jakob:
      friendly_name: "Bewohner Jakob anwesend"
    sensor.presence_katharina:
      friendly_name: "Bewohner Katharina anwesend"
################################################
## MQTT
################################################
sensor:
  - platform: mqtt
    name: "Presence Jakob"
    state_topic: "fhome/residents/jakob"
    icon: "mdi:tooltip-account"
  - platform: mqtt
    name: "Presence Katharina"
    state_topic: "fhome/residents/katharina"
    icon: "mdi:tooltip-account"
################################################
## Input Select
################################################
input_select:
  override_jakob:
    name: Override Jakob
    options:
      - Not Set
      - Just Arrived
      - Home
      - Just Left
      - Away
      - Extended Away
    initial: Not Set
    icon: mdi:account-alert-outline
  override_katharina:
    name: Override Katharina
    options:
      - Not Set
      - Just Arrived
      - Home
      - Just Left
      - Away
      - Extended Away
    initial: Not Set
    icon: mdi:account-alert-outline
################################################
## Automation
################################################
automation:
  - alias: 'presence tracking state person just arrived'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - device_tracker.jakob_iphone
        - device_tracker.katharina_iphone
        from: 'not_home'
        to: 'home'
        for:
          seconds: 3
    action:
      - service: mqtt.publish
        data_template:
          topic: >
            {% if trigger.entity_id == 'device_tracker.jakob_iphone' %}
              fhome/residents/jakob
            {% else %}
              fhome/residents/katharina
            {% endif %}
          payload_template: >
            {% if trigger.entity_id == 'device_tracker.jakob_iphone' %}
              {% if states.sensor.presence_jakob.state == 'Just Left' %}
                Home
              {% else %}
                Just Arrived
              {% endif %}
            {% else %}
              {% if states.sensor.presence_katharina.state == 'Just Left' %}
                Home
              {% else %}
                Just Arrived
              {% endif %}
            {% endif %}
          retain: true
      - service: notify.telegram_jakob
        data:
          title: '*Presence Tracking*'
          message: "{{ trigger.entity_id }} called person_just_arrived am {{ states.sensor.date.state }} um {{ states.sensor.time.state }}"

  - alias: 'presence tracking state person home'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - sensor.presence_jakob
        - sensor.presence_katharina
        to: 'Just Arrived'
        for:
          minutes: 10
      - platform: state
        entity_id:
        - sensor.presence_jakob
        - sensor.presence_katharina
        from: 'Just Left'
        to: 'Just Arrived'
    action:
      - service: mqtt.publish
        data_template:
          topic: >
            {% if trigger.entity_id == 'sensor.presence_jakob' %}
              presence_jakob
            {% else %}
              presence_katharina
            {% endif %}
          payload: Home
          retain: true
      - service: notify.telegram_jakob
        data:
          title: '*Presence Tracking*'
          message: "{{ trigger.entity_id }} called person_home am {{ states.sensor.date.state }} um {{ states.sensor.time.state }}"

  - alias: 'presence tracking state person just left'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - device_tracker.jakob_iphone
        - device_tracker.katharina_iphone
        from: 'home'
        to: 'not_home'
        for:
          seconds: 4
    action:
      - service: mqtt.publish
        data_template:
          topic: >
            {% if trigger.entity_id == 'device_tracker.jakob_iphone' %}
              fhome/residents/jakob
            {% else %}
              fhome/residents/katharina
            {% endif %}
          payload: Just Left
          retain: true
      - service: notify.telegram_jakob
        data:
          title: '*Presence Tracking*'
          message: "{{ trigger.entity_id }} called person_just_left am {{ states.sensor.date.state }} um {{ states.sensor.time.state }}"

  - alias: 'presence tracking state person away'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - sensor.presence_jakob
        - sensor.presence_katharina
        to: 'Just Left'
        for:
          minutes: 10
    action:
      - service: mqtt.publish
        data_template:
          topic: >
            {% if trigger.entity_id == 'sensor.presence_jakob' %}
              presence_jakob
            {% else %}
              presence_katharina
            {% endif %}
          payload: Away
          retain: true
      - service: notify.telegram_jakob
        data:
          title: '*Presence Tracking*'
          message: "{{ trigger.entity_id }} called person_away am {{ states.sensor.date.state }} um {{ states.sensor.time.state }}"

  - alias: 'presence tracking state person extended away'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - sensor.presence_jakob
        - sensor.presence_katharina
        to: 'Away'
        for:
          hours: 24
    action:
      - service: mqtt.publish
        data_template:
          topic: >
            {% if trigger.entity_id == 'sensor.presence_jakob' %}
              presence_jakob
            {% else %}
              presence_katharina
            {% endif %}
          payload: Extended Away
          retain: true
      - service: notify.telegram_jakob
        data:
          title: '*Presence Tracking*'
          message: "{{ trigger.entity_id }} called person_extended_away am {{ states.sensor.date.state }} um {{ states.sensor.time.state }}"

  - alias: 'presence tracking state person override'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - input_select.override_jakob
        - input_select.override_katharina
    action:
      - service: mqtt.publish
        data_template:
          topic: >
            {% if trigger.entity_id == 'input_select.override_jakob' %}
              presence_jakob
            {% else %}
              presence_katharina
            {% endif %}
          payload_template: >
            {% if trigger.to_state.state == 'Just Arrived' %}
              Just Arrived
            {% elif trigger.to_state.state == 'Home' %}
              Home
            {% elif trigger.to_state.state == 'Just Left' %}
              Just Left
            {% elif trigger.to_state.state == 'Away' %}
              Away
            {% else %}
              Extended Away
            {% endif %}
          retain: true

  - alias: 'presence tracking state residents just arrived'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - sensor.presence_jakob
        - sensor.presence_katharina
        to: 'Just Arrived'
    action:
      - service: notify.telegram_jakob
        data:
          title: '*Presence Tracking*'
          message: "{{ trigger.entity_id }} called residents_just_arrived am {{ states.sensor.date.state }} um {{ states.sensor.time.state }}"

  - alias: 'presence tracking state residents home'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - sensor.presence_jakob
        - sensor.presence_katharina
        to: 'Home'
    action:
      - service: homeassistant.turn_on
        entity_id: switch.residents_presence
      - service: homeassistant.turn_off
        entity_id: switch.residents_vacation
      - service: notify.telegram_jakob
        data:
          title: '*Presence Tracking*'
          message: "{{ trigger.entity_id }} called residents_home am {{ states.sensor.date.state }} um {{ states.sensor.time.state }}"

  - alias: 'presence tracking state residents away'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - sensor.presence_jakob
        - sensor.presence_katharina
        to: 'Away'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: sensor.presence_jakob
          state: 'Away'
        - condition: state
          entity_id: sensor.presence_katharina
          state: 'Away'
    action:
      - service: homeassistant.turn_off
        entity_id: switch.residents_presence
      - service: notify.telegram_jakob
        data:
          title: '*Presence Tracking*'
          message: "{{ trigger.entity_id }} called residents_away am {{ states.sensor.date.state }} um {{ states.sensor.time.state }}"

  - alias: 'presence tracking state residents extended away'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id:
        - sensor.presence_jakob
        - sensor.presence_katharina
        to: 'Extended Away'
    condition:
      condition: and
      conditions:
        - condition: state
          entity_id: sensor.presence_jakob
          state: 'Extended Away'
        - condition: state
          entity_id: sensor.presence_katharina
          state: 'Extended Away'
    action:
      - service: homeassistant.turn_off
        entity_id: switch.residents_presence
      - service: homeassistant.turn_on
        entity_id: switch.residents_vacation
      - service: notify.telegram_jakob
        data:
          title: '*Presence Tracking*'
          message: "{{ trigger.entity_id }} called residents_extended_away am {{ states.sensor.date.state }} um {{ states.sensor.time.state }}"
